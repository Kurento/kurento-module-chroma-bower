{"version":3,"sources":["../node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../lib/browser.js","../lib/ChromaFilter.js","../lib/complexTypes/index.js","../lib/complexTypes/WindowParam.js"],"names":["require","noop","error","result","console","trace","ChromaFilter","super_","call","this","checkChromaFilter","key","value","ChecktypeError","inherits","kurentoClient","checkType","Transaction","TransactionsManager","Filter","register","abstracts","prototype","setBackground","uri","callback","transaction","arguments","Array","shift","apply","undefined","required","params","bind","_invoke","unsetBackground","length","constructorParams","backgroundImage","type","mediaPipeline","window","events","module","exports","check","WindowParam","windowParamDict","topRightCornerX","topRightCornerY","width","height","Object","defineProperties","writable","enumerable","checkWindowParam","ComplexType","complexTypes","__module__","__type__"],"mappings":"AAAA;AE4BA,QAASC,MAAKC,EAAOC,GAGnB,MAFID,IAAOE,QAAQC,MAAMH,GAElBC,EAgBT,QAASG,gBACPA,aAAaC,OAAOC,KAAKC,MA8G3B,QAASC,mBAAkBC,EAAKC,GAE9B,KAAKA,YAAiBN,eACpB,KAAMO,gBAAeF,EAAKL,aAAcM,GAjJ5C,GAAIE,UAAWd,QAAQ,YAEnBe,cAAgBf,QAAQ,kBAExBgB,UAAiBD,cAAcC,UAC/BH,eAAiBG,UAAUH,eAE3BI,YAAcF,cAAcG,oBAAoBD,YAEhDE,OAASJ,cAAcK,SAASC,UAAUF,MAyB9CL,UAASR,aAAca,QAmBvBb,aAAagB,UAAUC,cAAgB,SAASC,EAAKC,GACnD,GAAIC,GAAeC,UAAU,YAAcV,aACzBW,MAAMN,UAAUO,MAAMC,MAAMH,WAC5BI,MAElBf,WAAU,SAAU,MAAOQ,GAAMQ,UAAU,GAE3C,IAAIC,IACFT,IAAKA,EAKP,OAFAC,IAAYA,GAAYxB,MAAMiC,KAAKzB,MAE5BA,KAAK0B,QAAQT,EAAa,gBAAiBO,EAAQR,IAgB5DnB,aAAagB,UAAUc,gBAAkB,SAASX,GAChD,GAAIC,GAAeC,UAAU,YAAcV,aACzBW,MAAMN,UAAUO,MAAMC,MAAMH,WAC5BI,MAMlB,OAJIJ,WAAUU,SAAQZ,EAAWM,QAEjCN,GAAYA,GAAYxB,MAAMiC,KAAKzB,MAE5BA,KAAK0B,QAAQT,EAAa,kBAAmBD,IAsBtDnB,aAAagC,mBACXC,iBACEC,KAAM,UACRC,eACED,KAAM,gBACNR,UAAU,GAEZU,QACEF,KAAM,cACNR,UAAU,IASd1B,aAAaqC,OAASxB,OAAOwB,OAkB7BC,OAAOC,QAAUvC,aAEjBA,aAAawC,MAAQpC;;ADnKrBV,QAAQ;;AGsCR,QAAS+C,aAAYC,GACnB,MAAKvC,gBAAgBsC,cAGrBC,EAAkBA,MAGlBhC,UAAU,MAAO,kCAAmCgC,EAAgBC,iBAAkBjB,UAAU,IAChGhB,UAAU,MAAO,kCAAmCgC,EAAgBE,iBAAkBlB,UAAU,IAChGhB,UAAU,MAAO,wBAAyBgC,EAAgBG,OAAQnB,UAAU,IAC5EhB,UAAU,MAAO,yBAA0BgC,EAAgBI,QAASpB,UAAU,IAG9Ee,YAAYxC,OAAOC,KAAKC,KAAMuC,OAG9BK,QAAOC,iBAAiB7C,MACtBwC,iBACEM,UAAU,EACVC,YAAY,EACZ5C,MAAOoC,EAAgBC,iBAEzBC,iBACEK,UAAU,EACVC,YAAY,EACZ5C,MAAOoC,EAAgBE,iBAEzBC,OACEI,UAAU,EACVC,YAAY,EACZ5C,MAAOoC,EAAgBG,OAEzBC,QACEG,UAAU,EACVC,YAAY,EACZ5C,MAAOoC,EAAgBI,WAjClB,GAAIL,aAAYC,GA4D3B,QAASS,kBAAiB9C,EAAKC,GAE7B,KAAKA,YAAiBmC,cACpB,KAAMlC,gBAAeF,EAAKoC,YAAanC,GA3F3C,GAAIE,UAAWd,QAAQ,YAEnBe,cAAgBf,QAAQ,kBAExBgB,UAAYD,cAAcC,UAC1BH,eAAiBG,UAAUH,eAE3B6C,YAAc3C,cAAcK,SAASuC,aAAaD,WA0DtD5C,UAASiC,YAAaW,aAItBL,OAAOC,iBAAiBP,YAAYzB,WAClCsC,YACEJ,YAAY,EACZ5C,MAAO,UAETiD,UACEL,YAAY,EACZ5C,MAAO,iBAmBXgC,OAAOC,QAAUE,YAEjBA,YAAYD,MAAQW;;ADxFpB,GAAIV,aAAc/C,QAAQ,gBAG1B6C,SAAQE,YAAcA","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * Loader for the kurento-module-chroma package on the browser\n */\n\nrequire('.');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials are made\n * available under the terms of the GNU Lesser General Public License (LGPL)\n * version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar checkType      = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar Transaction = kurentoClient.TransactionsManager.Transaction;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\nfunction noop(error, result) {\n  if (error) console.trace(error);\n\n  return result\n};\n\n\n/**\n * Create a {@link module:chroma.ChromaFilter ChromaFilter}\n *\n * @classdesc\n *  ChromaFilter interface. This type of {@link module:core/abstracts.Filter \n *  Filter} makes transparent a colour\n *  range in the top layer, revealing another image behind\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:chroma.ChromaFilter\n */\nfunction ChromaFilter(){\n  ChromaFilter.super_.call(this);\n};\ninherits(ChromaFilter, Filter);\n\n\n//\n// Public methods\n//\n\n/**\n * Sets the image to show on the detected chroma surface.\n *\n * @alias module:chroma.ChromaFilter.setBackground\n *\n * @param {external:String} uri\n *  URI where the image is located\n *\n * @param {module:chroma.ChromaFilter~setBackgroundCallback} [callback]\n *\n * @return {external:Promise}\n */\nChromaFilter.prototype.setBackground = function(uri, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  checkType('String', 'uri', uri, {required: true});\n\n  var params = {\n    uri: uri\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return this._invoke(transaction, 'setBackground', params, callback);\n};\n/**\n * @callback module:chroma.ChromaFilter~setBackgroundCallback\n * @param {external:Error} error\n */\n\n/**\n * Clears the image used to be shown behind the chroma surface.\n *\n * @alias module:chroma.ChromaFilter.unsetBackground\n *\n * @param {module:chroma.ChromaFilter~unsetBackgroundCallback} [callback]\n *\n * @return {external:Promise}\n */\nChromaFilter.prototype.unsetBackground = function(callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  if(!arguments.length) callback = undefined;\n\n  callback = (callback || noop).bind(this)\n\n  return this._invoke(transaction, 'unsetBackground', callback);\n};\n/**\n * @callback module:chroma.ChromaFilter~unsetBackgroundCallback\n * @param {external:Error} error\n */\n\n\n/**\n * @alias module:chroma.ChromaFilter.constructorParams\n *\n * @property {external:String} [backgroundImage]\n *  url of image to be used to replace the detected background\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the {@link module:core.MediaPipeline MediaPipeline} to which the filter \n *  belongs\n *\n * @property {module:chroma/complexTypes.WindowParam} window\n *  Window of replacement for the {@link module:chroma.ChromaFilter \n *  ChromaFilter}\n */\nChromaFilter.constructorParams = {\n  backgroundImage: {\n    type: 'String'  },\n  mediaPipeline: {\n    type: 'MediaPipeline',\n    required: true\n  },\n  window: {\n    type: 'WindowParam',\n    required: true\n  }\n};\n\n/**\n * @alias module:chroma.ChromaFilter.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nChromaFilter.events = Filter.events;\n\n\n/**\n * Checker for {@link chroma.ChromaFilter}\n *\n * @memberof module:chroma\n *\n * @param {external:String} key\n * @param {module:chroma.ChromaFilter} value\n */\nfunction checkChromaFilter(key, value)\n{\n  if(!(value instanceof ChromaFilter))\n    throw ChecktypeError(key, ChromaFilter, value);\n};\n\n\nmodule.exports = ChromaFilter;\n\nChromaFilter.check = checkChromaFilter;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials are made\n * available under the terms of the GNU Lesser General Public License (LGPL)\n * version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module chroma/complexTypes\n *\n * @copyright 2013-2015 Kurento (http://kurento.org/)\n * @license LGPL\n */\n\nvar WindowParam = require('./WindowParam');\n\n\nexports.WindowParam = WindowParam;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * All rights reserved. This program and the accompanying materials are made\n * available under the terms of the GNU Lesser General Public License (LGPL)\n * version 2.1 which accompanies this distribution, and is available at\n * http://www.gnu.org/licenses/lgpl-2.1.html\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar checkType = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar ComplexType = kurentoClient.register.complexTypes.ComplexType;\n\n\n/**\n * Parameter representing a window in a video stream.\n * It is used in command and constructor for media elements.\n * All units are in pixels, X runs from left to right, Y from top to bottom.\n *\n * @constructor module:chroma/complexTypes.WindowParam\n *\n * @property {external:Integer} topRightCornerX\n *  X coordinate of the left upper point of the window\n * @property {external:Integer} topRightCornerY\n *  Y coordinate of the left upper point of the window\n * @property {external:Integer} width\n *  width in pixels of the window\n * @property {external:Integer} height\n *  height in pixels of the window\n */\nfunction WindowParam(windowParamDict){\n  if(!(this instanceof WindowParam))\n    return new WindowParam(windowParamDict)\n\n  windowParamDict = windowParamDict || {}\n\n  // Check windowParamDict has the required fields\n  checkType('int', 'windowParamDict.topRightCornerX', windowParamDict.topRightCornerX, {required: true});\n  checkType('int', 'windowParamDict.topRightCornerY', windowParamDict.topRightCornerY, {required: true});\n  checkType('int', 'windowParamDict.width', windowParamDict.width, {required: true});\n  checkType('int', 'windowParamDict.height', windowParamDict.height, {required: true});\n\n  // Init parent class\n  WindowParam.super_.call(this, windowParamDict)\n\n  // Set object properties\n  Object.defineProperties(this, {\n    topRightCornerX: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.topRightCornerX\n    },\n    topRightCornerY: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.topRightCornerY\n    },\n    width: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.width\n    },\n    height: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.height\n    }\n  })\n}\ninherits(WindowParam, ComplexType)\n\n// Private identifiers to allow re-construction of the complexType on the server\n// They need to be enumerable so JSON.stringify() can access to them\nObject.defineProperties(WindowParam.prototype, {\n  __module__: {\n    enumerable: true,\n    value: \"chroma\"\n  },\n  __type__: {\n    enumerable: true,\n    value: \"WindowParam\"\n  }\n})\n\n/**\n * Checker for {@link chroma/complexTypes.WindowParam}\n *\n * @memberof module:chroma/complexTypes\n *\n * @param {external:String} key\n * @param {module:chroma/complexTypes.WindowParam} value\n */\nfunction checkWindowParam(key, value)\n{\n  if(!(value instanceof WindowParam))\n    throw ChecktypeError(key, WindowParam, value);\n};\n\n\nmodule.exports = WindowParam;\n\nWindowParam.check = checkWindowParam;\n"]}