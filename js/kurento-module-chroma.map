{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","../lib/ChromaFilter.js","../lib/browser.js","../lib/complexTypes/WindowParam.js","../lib/complexTypes/index.js"],"names":["noop","error","result","console","trace","ChromaFilter","super_","call","this","checkChromaFilter","key","value","ChecktypeError","inherits","require","kurentoClient","disguise","checkType","Transaction","TransactionsManager","Filter","register","abstracts","prototype","setBackground","uri","callback","transaction","arguments","Array","shift","apply","undefined","params","bind","_invoke","unsetBackground","length","constructorParams","backgroundImage","type","mediaPipeline","required","window","events","module","exports","check","WindowParam","windowParamDict","Object","defineProperties","topRightCornerX","writable","enumerable","topRightCornerY","width","height","checkWindowParam","ComplexType","complexTypes","__module__","__type__"],"mappings":"AAAA;ACiCA,QAASA,MAAKC,EAAOC,GAGnB,MAFID,IAAOE,QAAQC,MAAMH,GAElBC,EAgBT,QAASG,gBACPA,aAAaC,OAAOC,KAAKC,MAsH3B,QAASC,mBAAkBC,EAAKC,GAE9B,KAAKA,YAAiBN,eACpB,KAAMO,gBAAeF,EAAKL,aAAcM,GA5J5C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBE,SAAWD,cAAcC,SAEzBC,UAAiBF,cAAcE,UAC/BL,eAAiBK,UAAUL,eAG3BM,YAAcH,cAAcI,oBAAoBD,YAEhDE,OAASL,cAAcM,SAASC,UAAUF,MAyB9CP,UAASR,aAAce,QAmBvBf,aAAakB,UAAUC,cAAgB,SAASC,EAAKC,GACnD,GAAIC,GAAeC,UAAU,YAAcV,aACzBW,MAAMN,UAAUO,MAAMC,MAAMH,eAC5BI,GAMdC,GACFR,IAAKA,EAKP,OAFAC,IAAYA,GAAY1B,MAAMkC,KAAK1B,MAE5BQ,SAASR,KAAK2B,QAAQR,EAAa,gBAAiBM,EAAQP,GAAWlB,OAgBhFH,aAAakB,UAAUa,gBAAkB,SAASV,GAChD,GAAIC,GAAeC,UAAU,YAAcV,aACzBW,MAAMN,UAAUO,MAAMC,MAAMH,eAC5BI,EAYlB,YARgBA,IAAZN,IACW,EAGXE,UAAUS,SAAQX,MAAWM,IAEjCN,GAAYA,GAAY1B,MAAMkC,KAAK1B,MAE5BQ,SAASR,KAAK2B,QAAQR,EAAa,kBAAmBD,GAAWlB,OAsB1EH,aAAaiC,mBACXC,iBACEC,KAAM,UACRC,eACED,KAAM,wBACNE,UAAU,GAEZC,QACEH,KAAM,qBACNE,UAAU,IASdrC,aAAauC,OAASxB,OAAOwB,OAkB7BC,OAAOC,QAAUzC,aAEjBA,aAAa0C,MAAQtC;;AChLrBK,QAAQ;;ACwCR,QAASkC,aAAYC,GACnB,KAAKzC,eAAgBwC,cACnB,MAAO,IAAIA,aAAYC,EAEzBA,GAAkBA,MAclBD,YAAY1C,OAAOC,KAAKC,KAAMyC,GAG9BC,OAAOC,iBAAiB3C,MACtB4C,iBACEC,UAAU,EACVC,YAAY,EACZ3C,MAAOsC,EAAgBG,iBAEzBG,iBACEF,UAAU,EACVC,YAAY,EACZ3C,MAAOsC,EAAgBM,iBAEzBC,OACEH,UAAU,EACVC,YAAY,EACZ3C,MAAOsC,EAAgBO,OAEzBC,QACEJ,UAAU,EACVC,YAAY,EACZ3C,MAAOsC,EAAgBQ,UA2B7B,QAASC,kBAAiBhD,EAAKC,GAE7B,KAAKA,YAAiBqC,cACpB,KAAMpC,gBAAeF,EAAKsC,YAAarC,GAhG3C,GAAIE,UAAWC,QAAQ,YAEnBC,cAAgBD,QAAQ,kBAExBG,UAAYF,cAAcE,UAC1BL,eAAiBK,UAAUL,eAE3B+C,YAAc5C,cAAcM,SAASuC,aAAaD,WA+DtD9C,UAASmC,YAAaW,aAItBT,OAAOC,iBAAiBH,YAAYzB,WAClCsC,YACEP,YAAY,EACZ3C,MAAO,UAETmD,UACER,YAAY,EACZ3C,MAAO,iBAmBXkC,OAAOC,QAAUE,YAEjBA,YAAYD,MAAQW;;AC7FpB,GAAIV,aAAclC,QAAQ,gBAG1BgC,SAAQE,YAAcA","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar disguise = kurentoClient.disguise;\n\nvar checkType      = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\n\nvar Transaction = kurentoClient.TransactionsManager.Transaction;\n\nvar Filter = kurentoClient.register.abstracts.Filter;\n\n\nfunction noop(error, result) {\n  if (error) console.trace(error);\n\n  return result\n};\n\n\n/**\n * Create a {@link module:chroma.ChromaFilter ChromaFilter}\n *\n * @classdesc\n *  ChromaFilter interface. This type of {@link module:core/abstracts.Filter \n *  Filter} makes transparent a colour\n *  range in the top layer, revealing another image behind\n *\n * @extends module:core/abstracts.Filter\n *\n * @constructor module:chroma.ChromaFilter\n */\nfunction ChromaFilter(){\n  ChromaFilter.super_.call(this);\n};\ninherits(ChromaFilter, Filter);\n\n\n//\n// Public methods\n//\n\n/**\n * Sets the image to show on the detected chroma surface.\n *\n * @alias module:chroma.ChromaFilter.setBackground\n *\n * @param {external:String} uri\n *  URI where the image is located\n *\n * @param {module:chroma.ChromaFilter~setBackgroundCallback} [callback]\n *\n * @return {external:Promise}\n */\nChromaFilter.prototype.setBackground = function(uri, callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  //  \n  // checkType('String', 'uri', uri, {required: true});\n  //  \n\n  var params = {\n    uri: uri\n  };\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'setBackground', params, callback), this)\n};\n/**\n * @callback module:chroma.ChromaFilter~setBackgroundCallback\n * @param {external:Error} error\n */\n\n/**\n * Clears the image used to be shown behind the chroma surface.\n *\n * @alias module:chroma.ChromaFilter.unsetBackground\n *\n * @param {module:chroma.ChromaFilter~unsetBackgroundCallback} [callback]\n *\n * @return {external:Promise}\n */\nChromaFilter.prototype.unsetBackground = function(callback){\n  var transaction = (arguments[0] instanceof Transaction)\n                  ? Array.prototype.shift.apply(arguments)\n                  : undefined;\n\n  var usePromise = false;\n  \n  if (callback == undefined) {\n    usePromise = true;\n  }\n  \n  if(!arguments.length) callback = undefined;\n\n  callback = (callback || noop).bind(this)\n\n  return disguise(this._invoke(transaction, 'unsetBackground', callback), this)\n};\n/**\n * @callback module:chroma.ChromaFilter~unsetBackgroundCallback\n * @param {external:Error} error\n */\n\n\n/**\n * @alias module:chroma.ChromaFilter.constructorParams\n *\n * @property {external:String} [backgroundImage]\n *  url of image to be used to replace the detected background\n *\n * @property {module:core.MediaPipeline} mediaPipeline\n *  the {@link module:core.MediaPipeline MediaPipeline} to which the filter \n *  belongs\n *\n * @property {module:chroma/complexTypes.WindowParam} window\n *  Window of replacement for the {@link module:chroma.ChromaFilter \n *  ChromaFilter}\n */\nChromaFilter.constructorParams = {\n  backgroundImage: {\n    type: 'String'  },\n  mediaPipeline: {\n    type: 'kurento.MediaPipeline',\n    required: true\n  },\n  window: {\n    type: 'chroma.WindowParam',\n    required: true\n  }\n};\n\n/**\n * @alias module:chroma.ChromaFilter.events\n *\n * @extends module:core/abstracts.Filter.events\n */\nChromaFilter.events = Filter.events;\n\n\n/**\n * Checker for {@link module:chroma.ChromaFilter}\n *\n * @memberof module:chroma\n *\n * @param {external:String} key\n * @param {module:chroma.ChromaFilter} value\n */\nfunction checkChromaFilter(key, value)\n{\n  if(!(value instanceof ChromaFilter))\n    throw ChecktypeError(key, ChromaFilter, value);\n};\n\n\nmodule.exports = ChromaFilter;\n\nChromaFilter.check = checkChromaFilter;\n","/**\n * Loader for the kurento-module-chroma package on the browser\n */\n\nrequire('.');\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar inherits = require('inherits');\n\nvar kurentoClient = require('kurento-client');\n\nvar checkType = kurentoClient.checkType;\nvar ChecktypeError = checkType.ChecktypeError;\n\nvar ComplexType = kurentoClient.register.complexTypes.ComplexType;\n\n\n/**\n * Parameter representing a window in a video stream.\n * It is used in command and constructor for media elements.\n * All units are in pixels, X runs from left to right, Y from top to bottom.\n *\n * @constructor module:chroma/complexTypes.WindowParam\n *\n * @property {external:Integer} topRightCornerX\n *  X coordinate of the left upper point of the window\n * @property {external:Integer} topRightCornerY\n *  Y coordinate of the left upper point of the window\n * @property {external:Integer} width\n *  width in pixels of the window\n * @property {external:Integer} height\n *  height in pixels of the window\n */\nfunction WindowParam(windowParamDict){\n  if(!(this instanceof WindowParam))\n    return new WindowParam(windowParamDict)\n\n  windowParamDict = windowParamDict || {}\n\n  // Check windowParamDict has the required fields\n  // \n  // checkType('int', 'windowParamDict.topRightCornerX', windowParamDict.topRightCornerX, {required: true});\n  //  \n  // checkType('int', 'windowParamDict.topRightCornerY', windowParamDict.topRightCornerY, {required: true});\n  //  \n  // checkType('int', 'windowParamDict.width', windowParamDict.width, {required: true});\n  //  \n  // checkType('int', 'windowParamDict.height', windowParamDict.height, {required: true});\n  //  \n\n  // Init parent class\n  WindowParam.super_.call(this, windowParamDict)\n\n  // Set object properties\n  Object.defineProperties(this, {\n    topRightCornerX: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.topRightCornerX\n    },\n    topRightCornerY: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.topRightCornerY\n    },\n    width: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.width\n    },\n    height: {\n      writable: true,\n      enumerable: true,\n      value: windowParamDict.height\n    }\n  })\n}\ninherits(WindowParam, ComplexType)\n\n// Private identifiers to allow re-construction of the complexType on the server\n// They need to be enumerable so JSON.stringify() can access to them\nObject.defineProperties(WindowParam.prototype, {\n  __module__: {\n    enumerable: true,\n    value: \"chroma\"\n  },\n  __type__: {\n    enumerable: true,\n    value: \"WindowParam\"\n  }\n})\n\n/**\n * Checker for {@link module:chroma/complexTypes.WindowParam}\n *\n * @memberof module:chroma/complexTypes\n *\n * @param {external:String} key\n * @param {module:chroma/complexTypes.WindowParam} value\n */\nfunction checkWindowParam(key, value)\n{\n  if(!(value instanceof WindowParam))\n    throw ChecktypeError(key, WindowParam, value);\n};\n\n\nmodule.exports = WindowParam;\n\nWindowParam.check = checkWindowParam;\n","/* Autogenerated with Kurento Idl */\n\n/*\n * (C) Copyright 2013-2015 Kurento (http://kurento.org/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Media API for the Kurento Web SDK\n *\n * @module chroma/complexTypes\n *\n * @copyright 2013-2015 Kurento (http://kurento.org/)\n * @license ALv2\n */\n\nvar WindowParam = require('./WindowParam');\n\n\nexports.WindowParam = WindowParam;\n"]}